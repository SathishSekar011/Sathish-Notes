Jenkins:
========
	
==> Running Java Programme using cmd:
=======================================
	--> Compile ==> javac filename.java
	--> Run	    ==> java filename.java


==> Running Maven Project using cmd:
=====================================

	<build>
	    <pluginManagement>
		<plugins>
		  <plugin>
		  <plugin>
		<plugins>
	    <pluginManagement>
	</build>

--> add maven surefire plugin to pom.xml
	add below code inside surefire plugin
		<configuration>
			<suiteXmlFiles>testng.xml</suiteXmlFiles>
		</configuration>
--> add maven compiler plugin

--> open cmd prompt
	==> compile : mvn compile
	==> execute : mvn clean test



Jenkins Installation:
======================
1) Download Jenkins
	google --> download jenkins --> first link -->  Download Jenkins 2.401.1 LTS for
--> GenericJavaPackage.war
	==> jenkins.war

2) Configure Jenkins
	--> go to jenkins.war location --> open cmd --> cd to downloads location

	==> java -jar jenkins.war
	(**==> if above doesn't work
		==> java -jar jenkins.war --httpPort=8081

3) Access the Server
	==> java -jar jenkins.war
	--------------------------
		--> open browser --> url --> localhost:8080

	==> java -jar jenkins.war --httpPort=8081
	------------------------------------------
		--> open browser --> url --> localhost:8081

4) First Time Login:
	==> UserName --> admin
	==> Password --> C:\Users\ComputerName\.jenkins\secrets\initial admin password
			--> open file --> copy and paste the password
			--> create the username and password



Executing Programmes Using Jenkins:
====================================
--> Freestyle Job
--> Pipelene Job


--> Freestyle Job:
===================
1) Set Up Environment:
=======================
Open Jenkins --> Manage Jenkins --> Tools
 	--> JDK	--> JDK Installation --> Add JDK
		Name : JAVA_HOME
		Location : Location of JDK
	--> Maven --> Add Maven
		Name : MAVEN_HOME
		Location : Location of Maven
			or
		Add Automatically --> Version --> Install
		
	--> Save

2) Crete a Freestyle Job:
==========================
	--> Jenkins --> Dashboard --> New Item --> Enter the name of Job --> Select Freestyle Project --> OK --> Job Will be Created

3) Configure The Job:
======================
	--> Open the Job --> Configuration --> Enter the Description Of Job --> Scroll Down 
--> Build Step --> add Build Step --> Select Execute Windows Batch Commanands 
		==> javac filename.java
		==> java filename.java
	--> Save 

4) To Run the Job:
====================
	--> Open Job --> Build Now --> First time ==> Fails
		--> Copy and Paste the Java Programme file into the Jenkins Workspace
	==> C:\Users\Lenovo\.jenkins\workspace\Java Freestyle Job
	--> Build Now --> Execution Will Start

5) To See the Result:
=======================
	--> Build History --> open the execution --> Console Output



To Run Jobs Periodically:
=========================
	--> Job --> Configure --> Build Triggers --> Build Periodically


Schedule:
=========
	1 2 3 4 5
	* * * * *  ==> every minute every hour every day in month ......

1 ==> minute
2 ==> hour
3 ==> day in month
4 ==> month of year
5 ==> day in week




Configuring GITHUB with Jenkins:
=================================

Step 1:
========
	--> Dashboard --> Manage Plugin --> GITHUB --> 1.37 --> install

Step 2: To get the public server(ngrok)
=================================
	--> Google --> ngrok download --> windows --> Download ZIP file --> Extract --> Run ngrok.exe --> cmd prompt
	--> sign up and login to ngrok --> Your Authtoken --> Copy authentication code --> paste it on ngrok cmd prompt --> enter
	--> ngrok http 8080   /  --> ngrok http 8081   ==> enter
	--> ngrok will establish the public connection
	--> copy the url next to Forwading
	--> Launch the above url in Browser --> Jenkins will open --> Login
	(Here after we are going to use only the above url for jenkins)

Step 3: GITHUB Configuration:
-----------------------------
	--> Repository --> settings --> webhooks --> add webhook 
		==> PayLoad Url : (==>jenkins url by ngrok/github-webhook/)
==>https://8b3e-2401-4900-1cc8-7293-c96a-31b5-47c0-a882.ngrok-free.app/githug-webhook/
	--> add webhook

Step 4: Jenkins Configuration:
------------------------------
	--> Create a new Job --> configure --> Source Code Management --> GIT --> copy and paste repository url
	--> Configure --> Build Trigers --> GitHub hook trigger for GITScm polling
	--> apply --> save
	--> First Time --> Build Now
	--> whenever a new push occurs the build will automatically triggered in Jenkins


































	




















































