Analytical Functions:
====================

==> min
==> max
==> sum
==> avg
==> count

==============================================================================================

	===========$$$$$$$$==========
Select max(salary),min(salary),sum(salary),avg(salary),count(salary) from Employees
	===========$$$$$$$$==========


Group By:
=========
	- The GROUP BY statement groups rows that have the same values into summary rows

Syntax:
	===========$$$$$$$$==========
	SELECT column_name(s)
	FROM table_name
	WHERE condition
	GROUP BY column_name(s)
	===========$$$$$$$$==========


To Find The Count of Repeated Datas
=====================================

	===========$$$$$$$$==========
Select first_name,count(first_name) from Employees
Group By first_time
	===========$$$$$$$$==========


Result:--> first_name with number of counts will be displayed
========


HAVING:
========
	- WHERE keyword cannot be used with Group by functions instead we have to use HAVING

	===========$$$$$$$$==========
Select first_name,count(first_name) from Employees
Group By first_name
Having count(first_name)>1
	===========$$$$$$$$==========

Result:--> will display count greater than one

==============================================================================================

	===========$$$$$$$$==========
Select department_id,max(Salary) from Employees
Group By department_id
	===========$$$$$$$$==========

Result:--> max salary of every department id will be displayed



Rank Functions:
=================
--> rank()		
--> dense_rank()

--> rank():
===========
	- in case of duplicates will share the rank and the next value will not be assigned by the next rank(ranks will be skipped for the number of duplicates)
98  --> 1
98  --> 1
95  --> 3
92  --> 4
90  --> 5
90  --> 5
90  --> 5
87  --> 8

--> dense_rank():
=================
	- in case of duplicates will share the rank and the next value will  be assigned by the next rank(ranks will not be skipped for the number of duplicates)
98  --> 1
98  --> 1
95  --> 2
92  --> 3
90  --> 4
90  --> 4
90  --> 4
87  --> 5

Retraive a Data

Create a Table and Insert a data into a table
Delete a table
Update a table
Joins

JDBC


































